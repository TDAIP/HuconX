-- Ultra Modern UI Library (v4.0)
local UILibrary = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Cấu hình giao diện
local Theme = {
    Primary = Color3.fromRGB(30, 30, 30),
    Secondary = Color3.fromRGB(50, 50, 50),
    Accent = Color3.fromRGB(0, 255, 255),
    Text = Color3.fromRGB(255, 255, 255),
    Radius = UDim.new(0, 8),
    Transparency = 0.7,
    ShadowIntensity = 0.5
}

-- Khởi tạo biến toàn cục
local dragToggle, dragInput, dragStart, startPos

-- Hàm tạo hiệu ứng
local function SmoothTween(instance, properties, duration)
    TweenService:Create(instance, TweenInfo.new(duration, Enum.EasingStyle.Quad), properties):Play()
end

-- Hàm tạo bóng đổ
local function CreateShadow(frame)
    local shadow = Instance.new("ImageLabel")
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = Theme.ShadowIntensity
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.BackgroundTransparency = 1
    shadow.Parent = frame
    return shadow
end

function UILibrary:CreateWindow(title, logoID)
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local SideBar = Instance.new("Frame")
    local CollapseButton = Instance.new("ImageButton")
    local Logo = Instance.new("ImageLabel")
    
    -- Cài đặt giao diện chính
    ScreenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ResetOnSpawn = false

    MainFrame.Size = UDim2.new(0, 500, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
    MainFrame.BackgroundColor3 = Theme.Primary
    MainFrame.BackgroundTransparency = Theme.Transparency
    MainFrame.Parent = ScreenGui
    CreateShadow(MainFrame)

    -- Thanh điều hướng
    SideBar.Size = UDim2.new(0, 150, 1, 0)
    SideBar.BackgroundColor3 = Theme.Secondary
    SideBar.BackgroundTransparency = Theme.Transparency
    SideBar.Parent = MainFrame

    -- Logo
    if logoID then
        Logo.Size = UDim2.new(0, 100, 0, 100)
        Logo.Position = UDim2.new(0.5, -50, 0, 20)
        Logo.Image = "rbxassetid://"..logoID
        Logo.Parent = SideBar
    end

    -- Nút thu gọn
    CollapseButton.Image = "rbxassetid://3926305904"
    CollapseButton.ImageRectOffset = Vector2.new(964, 324)
    CollapseButton.Size = UDim2.new(0, 30, 0, 30)
    CollapseButton.Position = UDim2.new(1, -35, 0, 5)
    CollapseButton.Parent = MainFrame

    -- Tính năng kéo thả
    local function UpdateDrag(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end

    MainFrame.InputBegan:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            dragToggle = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragToggle = false
                end
            end)
        end
    end)

    MainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragToggle then
            UpdateDrag(input)
        end
    end)

    -- Chức năng thu gọn
    local isCollapsed = false
    CollapseButton.MouseButton1Click:Connect(function()
        isCollapsed = not isCollapsed
        SmoothTween(SideBar, {
            Size = isCollapsed and UDim2.new(0, 50, 1, 0) or UDim2.new(0, 150, 1, 0)
        }, 0.3)
    end)

    -- Hệ thống tab
    local TabContainer = Instance.new("Frame")
    TabContainer.Size = UDim2.new(1, -150, 1, 0)
    TabContainer.Position = UDim2.new(0, 150, 0, 0)
    TabContainer.BackgroundTransparency = 1
    TabContainer.Parent = MainFrame

    local Tabs = {}
    function Tabs:CreateTab(tabName)
        local TabButton = Instance.new("TextButton")
        local TabFrame = Instance.new("ScrollingFrame")
        
        -- Nút tab
        TabButton.Size = UDim2.new(1, -10, 0, 40)
        TabButton.Position = UDim2.new(0, 5, 0, 120 + (#Tabs * 45))
        TabButton.Text = tabName
        TabButton.Font = Enum.Font.Gotham
        TabButton.TextColor3 = Theme.Text
        TabButton.BackgroundColor3 = Theme.Primary
        TabButton.Parent = SideBar

        -- Nội dung tab
        TabFrame.Size = UDim2.new(1, 0, 1, 0)
        TabFrame.BackgroundTransparency = 1
        TabFrame.ScrollBarThickness = 5
        TabFrame.Visible = false
        TabFrame.Parent = TabContainer

        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(TabContainer:GetChildren()) do
                if tab:IsA("ScrollingFrame") then
                    tab.Visible = false
                end
            end
            TabFrame.Visible = true
        end)

        table.insert(Tabs, TabButton)
        return {
            Frame = TabFrame,
            AddButton = function(self, ...) return UILibrary:CreateButton(TabFrame, ...) end,
            AddToggle = function(self, ...) return UILibrary:CreateToggle(TabFrame, ...) end,
            AddSlider = function(self, ...) return UILibrary:CreateSlider(TabFrame, ...) end
        }
    end

    -- Cài đặt hệ thống
    local SettingsTab = Tabs:CreateTab("Settings")
    SettingsTab:AddSlider("UI Scale", {Min = 0.5, Max = 1.5, Default = 1}, function(value)
        MainFrame.Size = UDim2.new(0, 500 * value, 0, 300 * value)
    end)

    SettingsTab:AddSlider("Transparency", {Min = 0, Max = 1, Default = Theme.Transparency}, function(value)
        Theme.Transparency = value
        MainFrame.BackgroundTransparency = value
        SideBar.BackgroundTransparency = value
    end)

    return Tabs
end

-- Thành phần UI nâng cao
function UILibrary:CreateButton(parent, text, callback)
    local Button = Instance.new("TextButton")
    Button.Text = text
    Button.Size = UDim2.new(1, -20, 0, 40)
    Button.Position = UDim2.new(0, 10, 0, 10 + (#parent:GetChildren() * 45))
    Button.BackgroundColor3 = Theme.Secondary
    Button.TextColor3 = Theme.Text
    Button.Font = Enum.Font.Gotham
    Button.Parent = parent

    -- Hiệu ứng tương tác
    Button.MouseEnter:Connect(function()
        SmoothTween(Button, {BackgroundColor3 = Theme.Accent}, 0.2)
    end)
    
    Button.MouseLeave:Connect(function()
        SmoothTween(Button, {BackgroundColor3 = Theme.Secondary}, 0.2)
    end)

    Button.MouseButton1Click:Connect(callback)
    return Button
end

return UILibrary
