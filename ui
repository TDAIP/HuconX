-- Modern UI Library (Support Desktop & Mobile)
local UILibrary = {}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Tạo hiệu ứng mượt mà
local function SmoothTween(object, properties, duration)
    local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(object, tweenInfo, properties)
    tween:Play()
    return tween
end

-- Phát hiện thiết bị di động
local isMobile = UserInputService.TouchEnabled and not UserInputService.MouseEnabled

-- Tạo cửa sổ (Hỗ trợ kéo thả trên desktop)
function UILibrary:CreateWindow(title)
    local screenGui = Instance.new("ScreenGui")
    local mainFrame = Instance.new("Frame")
    local titleBar = Instance.new("Frame")
    local titleLabel = Instance.new("TextLabel")
    local closeButton = Instance.new("TextButton")
    local contentContainer = Instance.new("Frame")
    local uiListLayout = Instance.new("UIListLayout")

    -- Thiết lập ScreenGui
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.Name = "ModernUILibrary"
    screenGui.ResetOnSpawn = false

    -- Main Frame
    mainFrame.Parent = screenGui
    mainFrame.Size = isMobile and UDim2.new(1, -20, 1, -20) or UDim2.new(0, 350, 0, 400)
    mainFrame.Position = isMobile and UDim2.new(0, 10, 0, 10) or UDim2.new(0.5, -175, 0.5, -200)
    mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true

    -- Title Bar
    titleBar.Parent = mainFrame
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    titleBar.BorderSizePixel = 0

    -- Title Label
    titleLabel.Parent = titleBar
    titleLabel.Text = title
    titleLabel.Size = UDim2.new(1, -40, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.BackgroundTransparency = 1

    -- Close Button
    closeButton.Parent = titleBar
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.Text = "×"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextSize = 24
    closeButton.Font = Enum.Font.GothamBold
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.BorderSizePixel = 0

    -- Content Container
    contentContainer.Parent = mainFrame
    contentContainer.Size = UDim2.new(1, -20, 1, -60)
    contentContainer.Position = UDim2.new(0, 10, 0, 50)
    contentContainer.BackgroundTransparency = 1

    -- UI List Layout
    uiListLayout.Parent = contentContainer
    uiListLayout.Padding = UDim.new(0, 10)
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Kéo thả cửa sổ (desktop only)
    if not isMobile then
        local dragging = false
        local dragStartPos, frameStartPos

        titleBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStartPos = Vector2.new(input.Position.X, input.Position.Y)
                frameStartPos = mainFrame.Position
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = Vector2.new(input.Position.X, input.Position.Y) - dragStartPos
                mainFrame.Position = UDim2.new(frameStartPos.X.Scale, frameStartPos.X.Offset + delta.X, frameStartPos.Y.Scale, frameStartPos.Y.Offset + delta.Y)
            end
        end)

        titleBar.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
    end

    -- Đóng cửa sổ
    closeButton.MouseButton1Click:Connect(function()
        SmoothTween(mainFrame, {Size = UDim2.new(0, 0, 0, 0)}, 0.3).Completed:Connect(function()
            screenGui:Destroy()
        end)
    end)

    return {
        Frame = mainFrame,
        Content = contentContainer,
        CloseButton = closeButton
    }
end

-- Tạo nút bấm (Tối ưu cho cảm ứng)
function UILibrary:CreateButton(parent, text, callback)
    local button = Instance.new("TextButton")
    local corner = Instance.new("UICorner")

    button.Parent = parent
    button.Size = UDim2.new(1, 0, 0, 50)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.TextSize = 16
    button.Font = Enum.Font.Gotham
    button.AutoButtonColor = false
    button.LayoutOrder = #parent:GetChildren()

    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button

    -- Hiệu ứng hover
    if not isMobile then
        button.MouseEnter:Connect(function()
            SmoothTween(button, {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}, 0.2)
        end)

        button.MouseLeave:Connect(function()
            SmoothTween(button, {BackgroundColor3 = Color3.fromRGB(60, 60, 60)}, 0.2)
        end)
    end

    -- Xử lý sự kiện
    local function handleInput()
        SmoothTween(button, {BackgroundColor3 = Color3.fromRGB(100, 100, 100)}, 0.1):Wait()
        SmoothTween(button, {BackgroundColor3 = isMobile and Color3.fromRGB(60, 60, 60) or Color3.fromRGB(80, 80, 80)}, 0.1)
        callback()
    end

    button.MouseButton1Click:Connect(handleInput)
    if isMobile then
        button.TouchTap:Connect(handleInput)
    end

    return button
end

-- Tạo thanh trượt (Hỗ trợ cảm ứng)
function UILibrary:CreateSlider(parent, min, max, defaultValue, callback)
    local sliderContainer = Instance.new("Frame")
    local sliderTrack = Instance.new("Frame")
    local sliderThumb = Instance.new("TextButton")
    local valueLabel = Instance.new("TextLabel")
    local corner = Instance.new("UICorner")

    sliderContainer.Parent = parent
    sliderContainer.Size = UDim2.new(1, 0, 0, 60)
    sliderContainer.BackgroundTransparency = 1
    sliderContainer.LayoutOrder = #parent:GetChildren()

    sliderTrack.Parent = sliderContainer
    sliderTrack.Size = UDim2.new(1, 0, 0, 8)
    sliderTrack.Position = UDim2.new(0, 0, 0, 25)
    sliderTrack.BackgroundColor3 = Color3.fromRGB(60, 60, 60)

    corner = corner:Clone()
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = sliderTrack

    sliderThumb.Parent = sliderTrack
    sliderThumb.Size = UDim2.new(0, 20, 2, 0)
    sliderThumb.AnchorPoint = Vector2.new(0.5, 0.5)
    sliderThumb.Position = UDim2.new((defaultValue - min)/(max - min), 0, 0.5, 0)
    sliderThumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderThumb.Text = ""
    sliderThumb.AutoButtonColor = false

    corner = corner:Clone()
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = sliderThumb

    valueLabel.Parent = sliderContainer
    valueLabel.Size = UDim2.new(1, 0, 0, 20)
    valueLabel.Text = tostring(defaultValue)
    valueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    valueLabel.TextSize = 14
    valueLabel.Font = Enum.Font.Gotham
    valueLabel.BackgroundTransparency = 1

    -- Logic điều khiển
    local dragging = false
    local function updateValue(input)
        local relativeX = (input.Position.X - sliderTrack.AbsolutePosition.X) / sliderTrack.AbsoluteSize.X
        local value = math.clamp(min + (max - min) * relativeX, min, max)
        sliderThumb.Position = UDim2.new(relativeX, 0, 0.5, 0)
        valueLabel.Text = string.format("%.1f", value)
        callback(value)
    end

    sliderThumb.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateValue(input)
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)

    return sliderContainer
end

-- Toggle button cho mobile
function UILibrary:CreateMobileToggle()
    if not isMobile then return end
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 50)
    toggleButton.Position = UDim2.new(1, -60, 1, -60)
    toggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    toggleButton.Text = "☰"
    toggleButton.TextSize = 24
    toggleButton.TextColor3 = Color3.white
    toggleButton.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    return toggleButton
end

return UILibrary
